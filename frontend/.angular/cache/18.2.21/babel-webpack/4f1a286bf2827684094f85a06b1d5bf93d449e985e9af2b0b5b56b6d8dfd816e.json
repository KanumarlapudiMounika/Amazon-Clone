{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ProductService = /*#__PURE__*/(() => {\n  class ProductService {\n    constructor(http) {\n      this.http = http;\n      this.apiUrl = 'http://20.6.75.147:8080/api/products';\n      this.subcategoryUrl = 'http://20.6.75.147:8080/api/subcategory';\n    }\n    // Get all products\n    getAllProducts() {\n      return this.http.get(this.apiUrl);\n    }\n    // Fetch subcategories by category\n    fetchByCategory(category) {\n      return this.http.get(`${this.subcategoryUrl}/${category}`);\n    }\n    // Get products by category\n    getByCategory(category) {\n      return this.http.get(`${this.apiUrl}/category/${category}`);\n    }\n    // Filter products by minPrice, maxPrice, rating\n    filter(minPrice, maxPrice, rating) {\n      let params = new HttpParams();\n      if (minPrice != null) params = params.set('minPrice', minPrice);\n      if (maxPrice != null) params = params.set('maxPrice', maxPrice);\n      if (rating != null) params = params.set('rating', rating);\n      return this.http.get(`${this.apiUrl}/filter`, {\n        params\n      });\n    }\n    // Get products by category and subcategory\n    getProductsByCategoryAndSubcategory(category, subcategory) {\n      return this.http.get(`${this.apiUrl}/${category}/${subcategory}`);\n    }\n    // Filter by price and subcategory\n    filterByPriceAndSubcategory(subcategory, minPrice, maxPrice) {\n      const params = new HttpParams().set('subcategory', subcategory).set('minPrice', minPrice.toString()).set('maxPrice', maxPrice.toString());\n      return this.http.get(`${this.apiUrl}/filter`, {\n        params\n      });\n    }\n    // Filter by rating and subcategory\n    filterByRatingAndSubcategory(subcategory, rating) {\n      const params = new HttpParams().set('subcategory', subcategory).set('rating', rating.toString());\n      return this.http.get(`${this.apiUrl}/rating`, {\n        params\n      });\n    }\n    // Search products by keyword\n    searchProducts(keyword) {\n      return this.http.get(`${this.apiUrl}/search`, {\n        params: new HttpParams().set('keyword', keyword)\n      });\n    }\n    // Get product by name\n    getProductByName(name) {\n      return this.http.get(`${this.apiUrl}/name/${encodeURIComponent(name)}`);\n    }\n    // Get products by rating\n    getProductsByRating(rating) {\n      const params = new HttpParams().set('rating', rating.toString());\n      return this.http.get(`${this.apiUrl}/rating`, {\n        params\n      });\n    }\n    // Get related products excluding the current product\n    getRelatedProducts(category, subcategory, excludeName) {\n      const params = new HttpParams().set('category', category).set('subcategory', subcategory).set('excludeName', excludeName);\n      return this.http.get(`${this.apiUrl}/related`, {\n        params\n      });\n    }\n    static {\n      this.ɵfac = function ProductService_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || ProductService)(i0.ɵɵinject(i1.HttpClient));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: ProductService,\n        factory: ProductService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return ProductService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}